# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file license.txt or http://www.opensource.org/licenses/mit-license.php.

USE_UPNP:=0

INCLUDEPATHS= \
 -I"C:\boost-1.54" \
 -I"C:\db-4.8.30.NC\build_unix" \
 -I"C:\openssl-1.0.1e\include"

LIBPATHS= \
 -L"C:\boost-1.54.0\stage\lib" \
 -L"C:\db-4.8.30.NC\build_unix" \
 -L"C:\openssl-1.0.1e"

LIBS= \
 -l boost_system-mgw46-mt-1_54 \
 -l boost_filesystem-mgw46-mt-1_54 \
 -l boost_program_options-mgw46-mt-1_54 \
 -l boost_thread-mgw46-mt-1_54 \
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS=-D_WINDOWS -DBOOST_THREAD_USE_LIB -DBOOST_SPIRIT_THREADSAFE -DUSE_IPV6
# Uncomment for MinGW64
#DEFS+=-DWIN64
CFLAGS=-mthreads -O2 -fomit-frame-pointer -w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter $(DEBUGFLAGS) $(DEFS) $(INCLUDEPATHS)
#DEBUGFLAGS=-g

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifdef USE_UPNP
 INCLUDEPATHS += -I"C:\miniupnpc-1.8"
 LIBPATHS += -L"C:\miniupnpc-1.8"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

LIBS += -l kernel32 -l user32 -l gdi32 -l comdlg32 -l winspool -l winmm -l shell32 -l comctl32 -l ole32 -l oleaut32 -l uuid -l rpcrt4 -l advapi32 -l ws2_32 -l mswsock -l shlwapi

LDFLAGS += -Wl,-s -Wl,--dynamicbase -Wl,--nxcompat -Wl,--large-address-aware -static -static-libgcc -static-libstdc++

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/version.o \
    obj/checkpoints.o \
    obj/checkpointsync.o \
    obj/netbase.o \
    obj/addrman.o \
    obj/crypter.o \
    obj/key.o \
    obj/db.o \
    obj/init.o \
    obj/irc.o \
    obj/keystore.o \
    obj/main.o \
    obj/neoscrypt.o \
    obj/neoscrypt_asm.o \
    obj/net.o \
    obj/protocol.o \
    obj/bitcoinrpc.o \
    obj/rpcdump.o \
    obj/rpcnet.o \
    obj/rpcrawtransaction.o \
    obj/script.o \
    obj/scrypt.o \
    obj/sync.o \
    obj/util.o \
    obj/wallet.o \
    obj/walletdb.o \
    obj/noui.o


all: phoenixcoind.exe

obj/neoscrypt.o: neoscrypt.c
	gcc -O2 -fomit-frame-pointer -DSHA256 -c -o $@ $^

obj/neoscrypt_asm.o: neoscrypt_asm.S
	gcc -c -o $@ $^

obj/%.o: %.cpp $(HEADERS)
	g++ -c $(CFLAGS) -o $@ $<

phoenixcoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ $(LDFLAGS) $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	g++ -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_phoenixcoin.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	g++ $(CFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework $(LIBS)

clean:
	del /q phoenixcoind.exe test_phoenixcoin.exe
	del /q obj\*
	del /q obj-test\*
	del /q build.h

